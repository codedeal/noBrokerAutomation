package com.listeners;


import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.SetUp.TestBase;
import com.Utility.ExtentReport;

import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentReporter;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.text.SimpleDateFormat;



 
public class TestListener extends TestBase implements ITestListener 
{

	public void onTestStart(ITestResult result) {
		// TODO Auto-generated method stub
		TestBase base = new TestBase();
		ExtentReport.startTest(result.getName(), result.getMethod().getDescription())
		
		.assignAuthor("Upendra");
		try {
			ExtentReport.getTest().addScreenCaptureFromPath(takeScreenShot("demo"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void onTestSuccess(ITestResult result) {
		ExtentReport.getTest().log(Status.PASS, "Test Passed");
		try {
			ExtentReport.getTest().addScreenCaptureFromPath(takeScreenShot("demo"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void onTestFailure(ITestResult result) {
		
		try {
			ExtentReport.getTest().addScreenCaptureFromPath(takeScreenShot("demo"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void onTestSkipped(ITestResult result) {
		ExtentReport.getTest().log(Status.SKIP, "Test Skipped");
		
	}

	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		// TODO Auto-generated method stub
		try {
			ExtentReport.getTest().addScreenCaptureFromPath(takeScreenShot("demo"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void onStart(ITestContext context) {
		try {
			ExtentReport.getTest().addScreenCaptureFromPath(takeScreenShot("demo"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}// TODO Auto-generated method stub
		
	}

	public void onFinish(ITestContext context) {
		ExtentReport.getReporter().flush();
		
	}
	
    public static String takeScreenShot(String screenShotName) throws IOException {
        
        //create a string variable which will be unique always
        String df = new SimpleDateFormat("yyyyMMddhhss").format(new Date());
        
        //create object variable of TakeScreenshot class  
        TakesScreenshot ts = (TakesScreenshot)driver;
        
        //create File object variable which holds the screen shot reference 
        File source = ts.getScreenshotAs(OutputType.FILE);
        
        //store the screen shot path in path variable. Here we are storing the screenshots under screenshots folder 
        String path = System.getProperty("user.dir") + "/test-output/screenshots/" + screenShotName + df + ".png";
        
        //create another File object variable which points(refer) to the above stored path variable
        File destination = new File(path);
        
        //use FileUtils class method to save the screen shot at desired path
        FileUtils.copyFile(source, destination);
        
        //return the path where the screen shot is saved 
        return path;
        
    
        
        
    }

}
