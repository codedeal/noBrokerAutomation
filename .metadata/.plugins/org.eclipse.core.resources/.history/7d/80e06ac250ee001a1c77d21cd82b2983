package com.Pages;

import java.net.MalformedURLException;
import java.time.Duration;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.Dimension;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.SetUp.TestBase;

import io.appium.java_client.FindsByAndroidUIAutomator;
import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.pagefactory.AppiumFieldDecorator;
import io.appium.java_client.touch.WaitOptions;
import io.appium.java_client.touch.offset.PointOption;

public class ProductDetailPage extends TestBase
{

	@FindBy(id="glow_subnav_icon")
	MobileElement glowIcon;

	@FindBy(xpath="//android.view.View[@resource-id='title_feature_div']/android.view.View")
	MobileElement productName;

	@FindBy(xpath="//android.view.View[@resource-id='atfRedesign_priceblock_priceToPay']/android.widget.EditText")
	MobileElement productPrice;

	@FindBy(xpath="//*[@resource-id='add-to-cart-button']")
	//@FindBy(xpath="//*[@resource-id='addToCart_feature_div']")
	MobileElement addToCart;

	@FindBy(id="chrome_action_bar_cart_count")
	MobileElement cartIcon;
	
	public ProductDetailPage() {
		PageFactory.initElements(new AppiumFieldDecorator(driver), this);
	}

	public void detailsOfProductSelected()
	{
		System.out.println("Name of Product Selectted --->"+productName.getText());
		System.out.println("Price of Product Selectted --->"+productPrice.getText());

	}

	public static void swipVertical(int y) {

		System.out.println("Call swipe left...");
		Dimension size = driver.manage().window().getSize();
		int anchor = (int) (size.height * .15);
		int startPoint = (int) (size.width * .10);
		int endPoint = (int) (size.width * .50);

		System.out.println("Swipe: "+anchor+", "+startPoint+", "+endPoint+" and Size: "+size);
		new TouchAction(driver).press(PointOption.point(950, 700)).waitAction(WaitOptions.waitOptions(Duration.ofMillis(100))).moveTo(PointOption.point(950, y)).release().perform();
		System.out.println("Element Swiped...");
	}

	public void scrollToText(String text)
			throws MalformedURLException, InterruptedException {
		MobileElement el = (MobileElement) ((FindsByAndroidUIAutomator) driver)
				.findElementByAndroidUIAutomator("new UiScrollable("
						+ "new UiSelector().scrollable(true)).scrollIntoView("                      
						+ "new UiSelector().textContains(\""+text+"\"));");
		// el.click();
	}

	public void addToCart()
	{

		try {
			scrollToText("Add To Cart");
			if(addToCart.isDisplayed())
				addToCart.click();

		} catch (Exception e) {

			addToCart();
		}
	}
	
	  public CartPage proccedToCart()
	    {
			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			cartIcon.click();
			return new CartPage();
	    	
	    }

}

