package com.Pages;

import java.time.Duration;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.SetUp.TestBase;

import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.pagefactory.AppiumFieldDecorator;
import io.appium.java_client.touch.WaitOptions;
import io.appium.java_client.touch.offset.PointOption;

public class HomePage extends TestBase 
{
	@FindBy(id="rs_search_src_text")
	MobileElement searchEntryBar;
	
	@FindBy(id="iss_search_dropdown_item_text")
	List<MobileElement>dropDownList; 
	
	@FindBy(xpath="//android.view.View[contains(@content-desc,'TV')and contains(@content-desc,'65')]")
    List<MobileElement>listOfProducts;
	

	@FindBy(id="glow_subnav_icon")
	MobileElement glowIcon;
	
	@FindBy(xpath="//android.view.View[@resource-id='title_feature_div']/android.view.View")
	MobileElement productName;
	
	@FindBy(xpath="//android.view.View[@resource-id='atfRedesign_priceblock_priceToPay']/android.widget.EditText")
	MobileElement productPrice;
	
	@FindBy(xpath="//*[@resource-id='addToCart_feature_div']")
	MobileElement addToCart;
	
    public HomePage() {
    	
    	PageFactory.initElements(new AppiumFieldDecorator(driver), this);
    	
	}
    
	public void seracItem(String itemToSearch)
	{
		searchEntryBar.click();
		searchEntryBar.sendKeys(itemToSearch+"\n");
		dropDownList.get(0).click();
		
	       
	}
	
	public void swipe()
	{
		TouchAction action = new TouchAction(driver);
		PointOption p1= new PointOption();
		Dimension dimensions = driver.manage().window().getSize();
		Double screenHeightStart = dimensions.getHeight() * 0.5;
		int h1 = screenHeightStart.intValue();
		Double screenHeightEnd = dimensions.getHeight() * 0.2;
		int h2 = screenHeightEnd.intValue();
		action.press(p1.point(0, h1)).moveTo(p1.point(0,h2)).release().perform();
	}
	
	public static void swipVertical() {
		
	    System.out.println("Call swipe left...");
		Dimension size = driver.manage().window().getSize();
	    int anchor = (int) (size.height * .15);
	    int startPoint = (int) (size.width * .10);
	    int endPoint = (int) (size.width * .50);
	    
	    System.out.println("Swipe: "+anchor+", "+startPoint+", "+endPoint+" and Size: "+size);
	    new TouchAction(driver).press(PointOption.point(950, 700)).waitAction(WaitOptions.waitOptions(Duration.ofMillis(100))).moveTo(PointOption.point(950, 500)).release().perform();
	    System.out.println("Element Swiped...");
	}
	public void chooseProductRandomly()
	{
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		
		swipVertical();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		System.out.println(listOfProducts.size());
		if(listOfProducts.size()>=0)
			listOfProducts.get(0).click();
		 WebDriverWait wait = new WebDriverWait(driver, 20);

		 wait.until(ExpectedConditions.visibilityOf(glowIcon)); 
		// glowIcon.click();
		
		//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	}
    public void addToCart()
    {
    	System.out.println("Add to cart");
    	if(addToCart.isDisplayed())
    	{
    		addToCart.click();
    		return;
    	}
    	swipVertical();
    	addToCart();
    	
    }
}
